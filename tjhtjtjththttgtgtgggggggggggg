local F3X = loadstring(game:HttpGet("https://raw.githubusercontent.com/h3llg0at/y/refs/heads/main/f3x"))()
local e = game:GetObjects("rbxassetid://4572305378")[1]
local PlacePart = Instance.new("Part", workspace)
local pos = game.Players.LocalPlayer.Character.Head.CFrame.Position
local x, y, z = math.floor(pos.X), math.floor(pos.Y), math.floor(pos.Z)

PlacePart.Position = Vector3.new(x, y + 10, z)
PlacePart.Name = "PlacePart"
PlacePart.Size = Vector3.new(1, 1, 1)
PlacePart.Anchored = true

if workspace:FindFirstChild("PlacePart") then
    e.Name = "AutoBuildModel"
    e.Parent = workspace
    e:MoveTo(workspace.PlacePart.Position)
end

workspace.PlacePart:Destroy()

local Value = 0

for i, v in pairs(e:GetDescendants()) do
    if v:IsA("BasePart") then
        Value = Value + 1
        v.Anchored = true
    end
end

print("Amount Of Parts: "..Value)

local children = e:GetDescendants()
for i, child in ipairs(children) do
    local success, message =
        pcall(
        function()
            repeat
                wait()
            until child ~= nil

            local AutoBuildPart = F3X.new(child.ClassName, workspace)

            AutoBuildPart.CanCollide = child.CanCollide
            AutoBuildPart.Reflectance = child.Reflectance
            AutoBuildPart.Transparency = child.Transparency
            AutoBuildPart.Material = child.Material
            AutoBuildPart.Size = child.Size
            AutoBuildPart.Color = child.Color
            AutoBuildPart.Shape = child.Shape
            AutoBuildPart.BackSurface = child.BackSurface
            AutoBuildPart.BottomSurface = child.BottomSurface
            AutoBuildPart.FrontSurface = child.FrontSurface
            AutoBuildPart.LeftSurface = child.LeftSurface
            AutoBuildPart.RightSurface = child.RightSurface
            AutoBuildPart.TopSurface = child.TopSurface
            AutoBuildPart.CFrame = child.CFrame
            AutoBuildPart.Anchored = child.Anchored


			if child:IsA("Mesh") then
			local BuildPartMesh = AutoBuildPart:AddMesh() -- done
            BuildPartMesh.MeshId = child:FindFirstChildOfClass("Mesh").MeshId
            BuildPartMesh.MeshType = child:FindFirstChildOfClass("Mesh").MeshType
            BuildPartMesh.Offset = child:FindFirstChildOfClass("Mesh").Offset
            BuildPartMesh.Scale = child:FindFirstChildOfClass("Mesh").Scale
            BuildPartMesh.TextureId = child:FindFirstChildOfClass("Mesh").TextureId
            BuildPartMesh.Face = child:FindFirstChildOfClass("Mesh").Face
            BuildPartMesh.VertexColor = child:FindFirstChildOfClass("Mesh").VertexColor
			end
			
			if child:IsA("Texture") then
			local BuildPartTexture = AutoBuildPart:AddTexture() -- done
            BuildPartTexture.Face = child:FindFirstChildOfClass("Texture").Face
            BuildPartTexture.Texture = child:FindFirstChildOfClass("Texture").Texture
            BuildPartTexture.Transparency = child:FindFirstChildOfClass("Texture").Transparency
            BuildPartTexture.StudsPerTileU = child:FindFirstChildOfClass("Texture").StudsPerTileU
            BuildPartTexture.StudsPerTileV = child:FindFirstChildOfClass("Texture").StudsPerTileV
			end
			
			if child:IsA("Decal") then
			local BuildPartDecal = AutoBuildPart:AddDecal() -- done
            BuildPartDecal.Face = child:FindFirstChildOfClass("Decal").Face
            BuildPartDecal.Texture = child:FindFirstChildOfClass("Decal").Texture
            BuildPartDecal.Transparency = child:FindFirstChildOfClass("Decal").Transparency
 			end
 			
 			if child:IsA("Fire") then
 			local BuildPartFire = AutoBuildPart:AddFire() -- done
            BuildPartFire.Size = child:FindFirstChildOfClass("Fire").Size
            BuildPartFire.Heat = child:FindFirstChildOfClass("Fire").Heat
            BuildPartFire.Color = child:FindFirstChildOfClass("Fire").Color
            BuildPartFire.SecondaryColor = child:FindFirstChildOfClass("Fire").SecondaryColor
			end
			
			if child:IsA("Smoke") then
			local BuildPartSmoke = AutoBuildPart:AddSmoke() -- done
            BuildPartSmoke.Color = child:FindFirstChildOfClass("Smoke").Color
            BuildPartSmoke.Opacity = child:FindFirstChildOfClass("Smoke").Opacity
            BuildPartSmoke.Size = child:FindFirstChildOfClass("Smoke").Size
            BuildPartSmoke.RiseVelocity = child:FindFirstChildOfClass("Smoke").RiseVelocity
			end
			
			if child:IsA("Sparkles") then
			local BuildPartSparkles = AutoBuildPart:AddSparkles() -- done
            BuildPartSparkles.SparkleColor = child:FindFirstChildOfClass("Sparkles").SparkleColor
			end
			
			if child:IsA("SpotLight") then
			local BuildPartSpotLight = AutoBuildPart:AddSpotLight() -- done
            BuildPartSpotLight.Color = child:FindFirstChildOfClass("SpotLight").Color
            BuildPartSpotLight.Range = child:FindFirstChildOfClass("SpotLight").Range
            BuildPartSpotLight.Brightness = child:FindFirstChildOfClass("SpotLight").Brightness
            BuildPartSpotLight.Angle = child:FindFirstChildOfClass("SpotLight").Angle
            BuildPartSpotLight.Face = child:FindFirstChildOfClass("SpotLight").Face
            BuildPartSpotLight.Shadows = child:FindFirstChildOfClass("SpotLight").Shadows
			end
			
			if child:IsA("PointLight") then
			local BuildPartPointLight = AutoBuildPart:AddPointLight() -- done
            BuildPartPointLight.Color = child:FindFirstChildOfClass("PointLight").Color
            BuildPartPointLight.Range = child:FindFirstChildOfClass("PointLight").Range
            BuildPartPointLight.Brightness = child:FindFirstChildOfClass("PointLight").Brightness
            BuildPartPointLight.Shadows =  child:FindFirstChildOfClass("PointLight").Shadows
			end
			
			if child:IsA("SurfaceLight") then
			local BuildPartSurfaceLight = AutoBuildPart:AddSurfaceLight() -- done
            BuildPartSurfaceLight.Color = child:FindFirstChildOfClass("SurfaceLight").Color
            BuildPartSurfaceLight.Range = child:FindFirstChildOfClass("SurfaceLight").Range
            BuildPartSurfaceLight.Brightness = child:FindFirstChildOfClass("SurfaceLight").Brightness
            BuildPartSurfaceLight.Angle = child:FindFirstChildOfClass("SurfaceLight").Angle
            BuildPartSurfaceLight.Face = child:FindFirstChildOfClass("SurfaceLight").Face
            BuildPartSurfaceLight.Shadows = child:FindFirstChildOfClass("SurfaceLight").Shadows
			end
			
			if child:IsA("Weld") then
			local Part0 = child:FindFirstChildOfClass("Weld").Part0
			local Part1 = child:FindFirstChildOfClass("Weld").Part1
			AutoBuildPart:WeldTo(Part0, Part1)
			end
			
            child:Destroy()
        end
    )
    if not success then
        print("Object " .. child.Name .. " did an oopsie")
    end
end

workspace.AutoBuildModel:Destroy()

print("Finished!")
